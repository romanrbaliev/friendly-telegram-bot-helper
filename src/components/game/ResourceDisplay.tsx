
import React, { useState, useEffect } from 'react';
import { DollarSign, GraduationCap, Briefcase, HelpCircle } from 'lucide-react';
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover";

interface ResourceDisplayProps {
  dollars: number;
  usdt: number;
  showUsdt: boolean;
  stakedUsdt: number;
  showStaking: boolean;
  knowledge: number;
  showKnowledge: boolean;
  btc: number;
  showBtc: boolean;
  role?: string | null;
}

const ResourceDisplay: React.FC<ResourceDisplayProps> = ({ 
  dollars, 
  usdt, 
  showUsdt, 
  stakedUsdt, 
  showStaking,
  knowledge,
  showKnowledge,
  btc,
  showBtc,
  role
}) => {
  // State for real-time resource display
  const [displayDollars, setDisplayDollars] = useState(dollars);
  const [displayUsdt, setDisplayUsdt] = useState(usdt);
  const [displayBtc, setDisplayBtc] = useState(btc);
  const [displayStakedUsdt, setDisplayStakedUsdt] = useState(stakedUsdt);
  
  // Real-time updates for resources
  useEffect(() => {
    // Update base values when props change
    setDisplayDollars(dollars);
    setDisplayUsdt(usdt);
    setDisplayBtc(btc);
    setDisplayStakedUsdt(stakedUsdt);
    
    // Only set up interval if we have staked USDT or mining power
    if (stakedUsdt > 0 || btc > 0) {
      const interval = setInterval(() => {
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≥–æ–¥–æ–≤—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
        const baseApy = 10; // 10% –≥–æ–¥–æ–≤—ã—Ö
        const roleBonus = role === 'investor' ? 10 : 0; // +10% –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
        const totalApy = baseApy + roleBonus;
        
        // Calculate incremental values based on APY on staked USDT
        // This assumes the defined yearly return, calculated for 100ms
        if (stakedUsdt > 0) {
          const usdtIncrement = stakedUsdt * totalApy / (365 * 24 * 36000); // APY yearly return per 100ms
          setDisplayUsdt(prev => prev + usdtIncrement);
          
          // Also animate the staked USDT with a minimal visual increment
          const stakedIncrement = stakedUsdt * 0.001 / (365 * 24 * 36000); // Visual increment
          setDisplayStakedUsdt(prev => prev + stakedIncrement);
        }
        
        // If we have btc, update that too (assuming mining updates)
        if (btc > 0) {
          const btcIncrement = 0.00000001; // Very small increment for visual purposes
          setDisplayBtc(prev => prev + btcIncrement);
        }
      }, 100);
      
      return () => clearInterval(interval);
    }
  }, [dollars, usdt, btc, stakedUsdt, role]);

  const getRoleName = (roleId: string | null): string => {
    if (!roleId) return "";
    
    const roles: {[key: string]: string} = {
      "investor": "–ò–Ω–≤–µ—Å—Ç–æ—Ä",
      "founder": "–§–∞—É–Ω–¥–µ—Ä",
      "trader": "–¢—Ä–µ–π–¥–µ—Ä",
      "miner": "–ú–∞–π–Ω–µ—Ä",
      "influencer": "–ò–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä",
      "analyst": "–ê–Ω–∞–ª–∏—Ç–∏–∫",
      "arbitrage": "–ê—Ä–±–∏—Ç—Ä–∞–∂–Ω–∏–∫"
    };
    
    return roles[roleId] || "";
  };

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö –¥–ª—è –ø–æ–ø–∞–ø–µ—Ä–æ–≤
  const resourceInfo = {
    dollars: {
      title: "–ù–∞–ª–∏—á–Ω—ã–µ",
      description: "–ë–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞, –ø–æ–ª—É—á–∞–µ–º–∞—è –∑–∞ –∫–ª–∏–∫–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –¥–ª—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.",
      source: "–ü–æ–ª—É—á–µ–Ω–∏–µ: –∫–ª–∏–∫–∏, –ø—Ä–æ–¥–∞–∂–∞ –∞–∫—Ç–∏–≤–æ–≤",
      usage: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø–æ–∫—É–ø–∫–∞ USDT, –æ–±—É—á–µ–Ω–∏–µ, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"
    },
    usdt: {
      title: "USDT (Tether)",
      description: "–°—Ç–µ–π–±–ª–∫–æ–∏–Ω, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ –¥–æ–ª–ª–∞—Ä—É –°–®–ê. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.",
      source: "–ü–æ–ª—É—á–µ–Ω–∏–µ: –ø–æ–∫—É–ø–∫–∞ –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ, –¥–æ—Ö–æ–¥ –æ—Ç —Å—Ç–µ–π–∫–∏–Ω–≥–∞",
      usage: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: —Å—Ç–µ–π–∫–∏–Ω–≥, —Ç–æ—Ä–≥–æ–≤–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏",
      bonuses: role === 'investor' ? "–ë–æ–Ω—É—Å —Ä–æ–ª–∏: +10% –∫ –¥–æ—Ö–æ–¥—É –æ—Ç —Å—Ç–µ–π–∫–∏–Ω–≥–∞" : ""
    },
    btc: {
      title: "Bitcoin (BTC)",
      description: "–ü–µ—Ä–≤–∞—è –∏ —Å–∞–º–∞—è –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞. –ò–º–µ–µ—Ç –≤—ã—Å–æ–∫—É—é –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å.",
      source: "–ü–æ–ª—É—á–µ–Ω–∏–µ: –º–∞–π–Ω–∏–Ω–≥, —Ç–æ—Ä–≥–æ–≤–ª—è",
      usage: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–¥–∞–∂–∞ –∑–∞ USDT, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
      marketState: "–ú–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–¥–≤–µ—Ä–∂–µ–Ω –≤–ª–∏—è–Ω–∏—é —Ä—ã–Ω–æ—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π"
    },
    staking: {
      title: "–°—Ç–µ–π–∫–∏–Ω–≥ USDT",
      description: "USDT, –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –≤ —Å—Ç–µ–π–∫–∏–Ω–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞.",
      income: `–ë–∞–∑–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 10% –≥–æ–¥–æ–≤—ã—Ö${role === 'investor' ? '\n–ë–æ–Ω—É—Å —Ä–æ–ª–∏: +10% –≥–æ–¥–æ–≤—ã—Ö' : ''}`,
      total: `–¢–µ–∫—É—â–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: ${10 + (role === 'investor' ? 10 : 0)}% –≥–æ–¥–æ–≤—ã—Ö`
    },
    knowledge: {
      title: "–ó–Ω–∞–Ω–∏—è",
      description: "–í–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ –±–ª–æ–∫—á–µ–π–Ω–∞.",
      bonuses: "–ó–Ω–∞–Ω–∏—è —É–ª—É—á—à–∞—é—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∞—Å–ø–µ–∫—Ç–æ–≤ –∏–≥—Ä—ã:",
      details: "- –°–Ω–∏–∂–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–π –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ USDT\n- –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–∞–π–Ω–∏–Ω–≥–∞\n- –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\n- –£–ª—É—á—à–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –æ—Ç –∫–ª–∏–∫–æ–≤"
    },
    role: {
      title: "–ö–∞—Ä—å–µ—Ä–∞",
      description: role ? `–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å: ${getRoleName(role)}` : "–í—ã –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é",
      bonuses: role === 'investor' ? "–ë–æ–Ω—É—Å—ã –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞: +10% –∫ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ —Å—Ç–µ–π–∫–∏–Ω–≥–∞" : 
               role === 'miner' ? "–ë–æ–Ω—É—Å—ã –º–∞–π–Ω–µ—Ä–∞: +15% –∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–∞–π–Ω–∏–Ω–≥–∞" : 
               role === 'trader' ? "–ë–æ–Ω—É—Å—ã —Ç—Ä–µ–π–¥–µ—Ä–∞: -20% –∫ –∫–æ–º–∏—Å—Å–∏—è–º –ø—Ä–∏ —Ç–æ—Ä–≥–æ–≤–ª–µ" : 
               "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å—ã"
    }
  };

  return (
    <TooltipProvider>
      <div className="glass-morphism p-1.5 rounded-lg animate-fade-in sticky top-0 z-10 text-[10px]">
        <h2 className="text-xs font-semibold mb-0.5 text-white border-b border-white/10 pb-0.5">
          –†–µ—Å—É—Ä—Å—ã
        </h2>
        <div className="space-y-0.5">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-0.5">
              <DollarSign size={10} className="text-green-400" />
              <span className="text-gray-200">–ù–∞–ª–∏—á–Ω—ã–µ:</span>
            </div>
            <div className="flex items-center gap-1">
              <span className="font-mono text-white">${displayDollars.toFixed(2)}</span>
              <Popover>
                <PopoverTrigger>
                  <HelpCircle size={10} className="text-gray-400 hover:text-white cursor-help transition-colors" />
                </PopoverTrigger>
                <PopoverContent className="bg-gray-800 border border-gray-700 text-white text-xs p-3 w-64 shadow-xl">
                  <h3 className="font-bold text-green-400 mb-1">{resourceInfo.dollars.title}</h3>
                  <p className="text-gray-300 mb-2 text-[10px]">{resourceInfo.dollars.description}</p>
                  <div className="space-y-1">
                    <p className="text-[10px]"><span className="font-semibold text-gray-200">üîπ {resourceInfo.dollars.source}</span></p>
                    <p className="text-[10px]"><span className="font-semibold text-gray-200">üî∏ {resourceInfo.dollars.usage}</span></p>
                  </div>
                </PopoverContent>
              </Popover>
            </div>
          </div>
          
          {showUsdt && (
            <div className="flex items-center justify-between animate-fade-up">
              <div className="flex items-center gap-0.5">
                <div className="w-3 h-3 rounded-full bg-[#26A17B] flex items-center justify-center text-[6px] font-bold text-white">‚ÇÆ</div>
                <span className="text-gray-200">USDT:</span>
              </div>
              <div className="flex items-center gap-1">
                <span className="font-mono text-white">{displayUsdt.toFixed(8)}</span>
                <Popover>
                  <PopoverTrigger>
                    <HelpCircle size={10} className="text-gray-400 hover:text-white cursor-help transition-colors" />
                  </PopoverTrigger>
                  <PopoverContent className="bg-gray-800 border border-gray-700 text-white text-xs p-3 w-64 shadow-xl">
                    <h3 className="font-bold text-green-400 mb-1">{resourceInfo.usdt.title}</h3>
                    <p className="text-gray-300 mb-2 text-[10px]">{resourceInfo.usdt.description}</p>
                    <div className="space-y-1">
                      <p className="text-[10px]"><span className="font-semibold text-gray-200">üîπ {resourceInfo.usdt.source}</span></p>
                      <p className="text-[10px]"><span className="font-semibold text-gray-200">üî∏ {resourceInfo.usdt.usage}</span></p>
                      {resourceInfo.usdt.bonuses && (
                        <p className="text-[10px]"><span className="font-semibold text-yellow-400">‚ú® {resourceInfo.usdt.bonuses}</span></p>
                      )}
                    </div>
                  </PopoverContent>
                </Popover>
              </div>
            </div>
          )}
          
          {showBtc && (
            <div className="flex items-center justify-between animate-fade-up">
              <div className="flex items-center gap-0.5">
                <div className="w-3 h-3 rounded-full bg-[#F7931A] flex items-center justify-center text-[6px] font-bold text-white">‚Çø</div>
                <span className="text-gray-200">Bitcoin:</span>
              </div>
              <div className="flex items-center gap-1">
                <span className="font-mono text-white">{displayBtc.toFixed(8)}</span>
                <Popover>
                  <PopoverTrigger>
                    <HelpCircle size={10} className="text-gray-400 hover:text-white cursor-help transition-colors" />
                  </PopoverTrigger>
                  <PopoverContent className="bg-gray-800 border border-gray-700 text-white text-xs p-3 w-64 shadow-xl">
                    <h3 className="font-bold text-yellow-500 mb-1">{resourceInfo.btc.title}</h3>
                    <p className="text-gray-300 mb-2 text-[10px]">{resourceInfo.btc.description}</p>
                    <div className="space-y-1">
                      <p className="text-[10px]"><span className="font-semibold text-gray-200">üîπ {resourceInfo.btc.source}</span></p>
                      <p className="text-[10px]"><span className="font-semibold text-gray-200">üî∏ {resourceInfo.btc.usage}</span></p>
                      <p className="text-[10px]"><span className="font-semibold text-blue-400">üìä {resourceInfo.btc.marketState}</span></p>
                    </div>
                  </PopoverContent>
                </Popover>
              </div>
            </div>
          )}
          
          {showStaking && (
            <div className="flex items-center justify-between animate-fade-up">
              <div className="flex items-center gap-0.5">
                <div className="w-3 h-3 rounded-full bg-[#26A17B] flex items-center justify-center text-[6px] font-bold text-white">‚ÇÆ</div>
                <span className="text-gray-200">–°—Ç–µ–π–∫–∏–Ω–≥:</span>
              </div>
              <div className="flex items-center gap-1">
                <span className="font-mono text-white">{displayStakedUsdt.toFixed(8)}</span>
                <Popover>
                  <PopoverTrigger>
                    <HelpCircle size={10} className="text-gray-400 hover:text-white cursor-help transition-colors" />
                  </PopoverTrigger>
                  <PopoverContent className="bg-gray-800 border border-gray-700 text-white text-xs p-3 w-64 shadow-xl">
                    <h3 className="font-bold text-green-400 mb-1">{resourceInfo.staking.title}</h3>
                    <p className="text-gray-300 mb-2 text-[10px]">{resourceInfo.staking.description}</p>
                    <div className="space-y-1">
                      <p className="text-[10px] whitespace-pre-line"><span className="font-semibold text-gray-200">{resourceInfo.staking.income}</span></p>
                      <p className="text-[10px]"><span className="font-semibold text-yellow-400">{resourceInfo.staking.total}</span></p>
                    </div>
                  </PopoverContent>
                </Popover>
              </div>
            </div>
          )}

          {showKnowledge && (
            <div className="flex items-center justify-between animate-fade-up">
              <div className="flex items-center gap-0.5">
                <GraduationCap size={10} className="text-blue-400" />
                <span className="text-gray-200">–ó–Ω–∞–Ω–∏—è:</span>
              </div>
              <div className="flex items-center gap-1">
                <span className="font-mono text-white">{knowledge}%</span>
                <Popover>
                  <PopoverTrigger>
                    <HelpCircle size={10} className="text-gray-400 hover:text-white cursor-help transition-colors" />
                  </PopoverTrigger>
                  <PopoverContent className="bg-gray-800 border border-gray-700 text-white text-xs p-3 w-64 shadow-xl">
                    <h3 className="font-bold text-blue-400 mb-1">{resourceInfo.knowledge.title}</h3>
                    <p className="text-gray-300 mb-2 text-[10px]">{resourceInfo.knowledge.description}</p>
                    <div className="space-y-1">
                      <p className="text-[10px]"><span className="font-semibold text-gray-200">{resourceInfo.knowledge.bonuses}</span></p>
                      <p className="text-[10px] whitespace-pre-line"><span className="font-semibold text-blue-300">{resourceInfo.knowledge.details}</span></p>
                    </div>
                  </PopoverContent>
                </Popover>
              </div>
            </div>
          )}

          {role && (
            <div className="flex items-center justify-between animate-fade-up mt-0.5 pt-0.5 border-t border-white/10">
              <div className="flex items-center gap-0.5">
                <Briefcase size={10} className="text-purple-400" />
                <span className="text-gray-200">–ö–∞—Ä—å–µ—Ä–∞:</span>
              </div>
              <div className="flex items-center gap-1">
                <span className="font-mono text-white">{getRoleName(role)}</span>
                <Popover>
                  <PopoverTrigger>
                    <HelpCircle size={10} className="text-gray-400 hover:text-white cursor-help transition-colors" />
                  </PopoverTrigger>
                  <PopoverContent className="bg-gray-800 border border-gray-700 text-white text-xs p-3 w-64 shadow-xl">
                    <h3 className="font-bold text-purple-400 mb-1">{resourceInfo.role.title}</h3>
                    <p className="text-gray-300 mb-2 text-[10px]">{resourceInfo.role.description}</p>
                    <div className="space-y-1">
                      <p className="text-[10px]"><span className="font-semibold text-yellow-400">{resourceInfo.role.bonuses}</span></p>
                    </div>
                  </PopoverContent>
                </Popover>
              </div>
            </div>
          )}
        </div>
      </div>
    </TooltipProvider>
  );
};

export default ResourceDisplay;
